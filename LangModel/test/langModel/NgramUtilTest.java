package langModel;

import static com.sun.xml.internal.ws.dump.LoggingDumpTube.Position.Before;
import static org.junit.Assert.*;


import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TestName;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 * This JUnit Test Class has been generated by right clicking on the NgramUtil class
 * and selecting "New > Junit Test Case". After that, you have to select the methods 
 * for which you would like to generate tests. 
 * In practice, you will duplicate manually the test methods to possibly create 
 * several tests for one method.
 * 
 * Your work is then to remove the fail parts and to implement each test.
 * One method is given as an example
 * 
 * To run them:
 * either right click on the class name or simply on the method name and
 * select "Run As Junit Test".
 * 
 * @author N. Hernandez and S. Quiniou (2015)
 *
 */
public class NgramUtilTest {
	String sentence = "<s> cette phrase est de taille 9 . </s>";
	String ngram = "o√π commence l' historique de cet n-gramme";
	String sentAlph = "a b c d e f g";
	
	
	/**
	 * Test method for {@link langModel.NgramUtil#getSequenceSize(java.lang.String)}.
	 */
	@Test
	public void testGetSequenceSize() {
		System.out.println(langModel.NgramUtil.getSequenceSize(sentence));
		// on the left the expected value and on the right the actual one 
		// (i.e. the one returned by your method)
		assertEquals(9, langModel.NgramUtil.getSequenceSize(sentence));
	}

	
	/**
	 * Test method for {@link langModel.NgramUtil#generateNgrams(java.lang.String, int, int)}.
	 */
	@Test
	public void testGenerateNgrams() {
		System.out.println(langModel.NgramUtil.generateNgrams(sentAlph, 1, 3));
		System.out.println(langModel.NgramUtil.generateNgrams(sentAlph, 1, 2));
		System.out.println(langModel.NgramUtil.generateNgrams(sentAlph, 1, 1));
		List<String> res = Arrays.asList("a", "b", "c", "d", "e", "f", "g", "a b", "b c", "c d", "d e", "e f", "f g", "a b c", "b c d", "c d e", "d e f", "e f g");
		assertEquals(res, langModel.NgramUtil.generateNgrams(sentAlph, 1, 3));
		res = Arrays.asList("a", "b", "c", "d", "e", "f", "g", "a b", "b c", "c d", "d e", "e f", "f g");
		assertEquals(res, langModel.NgramUtil.generateNgrams(sentAlph, 1, 2));
		res = Arrays.asList("a", "b", "c", "d", "e", "f", "g");
		assertEquals(res, langModel.NgramUtil.generateNgrams(sentAlph, 1, 1));
	}

	
	/**
	 * Test method for {@link langModel.NgramUtil#getHistory(java.lang.String, int)}.
	 */
	@org.junit.Test
	public void testGetHistory() {
		assertEquals("", langModel.NgramUtil.getHistory(ngram,1));
		assertEquals("cet", langModel.NgramUtil.getHistory(ngram,2));
		assertEquals("de cet", langModel.NgramUtil.getHistory(ngram,3));
		assertEquals("historique de cet", langModel.NgramUtil.getHistory(ngram,4));
	}

	
	/**
	 * Test method for {@link langModel.NgramUtil#decomposeIntoNgrams(java.lang.String, int)}.
	 */
	@org.junit.Test
	public void testDecomposeIntoNgrams() {
		System.out.println(langModel.NgramUtil.decomposeIntoNgrams(sentAlph, 3).toString());
		System.out.println(langModel.NgramUtil.decomposeIntoNgrams(sentAlph, 2).toString());
		System.out.println(langModel.NgramUtil.decomposeIntoNgrams(sentAlph, 1).toString());
		List res = Arrays.asList("a", "a b", "a b c", "b c d", "c d e", "d e f", "e f g");
		assertEquals(res, langModel.NgramUtil.decomposeIntoNgrams(sentAlph, 3));
		res = Arrays.asList("a", "a b", "b c", "c d","d e","e f","f g");
		assertEquals(res, langModel.NgramUtil.decomposeIntoNgrams(sentAlph, 2));
		res = Arrays.asList("a", "b", "c","d","e","f","g");
		assertEquals(res, langModel.NgramUtil.decomposeIntoNgrams(sentAlph, 1));

	}
	
	
	/**
	 * The following code displays a separator 
	 * between each method output
	 * 
	 * (manually added)
	 **/
	@Rule
	public TestName name = new TestName();

	@Before
	public void printSeparator()
	{
		System.out.println("\n=== " + name.getMethodName() + " =====================");
	}

}
